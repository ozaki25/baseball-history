
> baseball-history@0.1.0 test
> vitest --run


 RUN  v3.2.4 /Users/ozaki/app/baseball-history

 ❯ src/tests/parsers/homeVisitorDetector.test.ts (4 tests | 4 failed) 4ms
   × homeVisitorDetector > detectHomeVisitor > ホーム球場でファイターズが0番目の場合 3ms
     → (0 , detectMyTeamPosition) is not a function
   × homeVisitorDetector > detectHomeVisitor > ビジター球場でファイターズが1番目の場合 0ms
     → (0 , detectMyTeamPosition) is not a function
   × homeVisitorDetector > isHomeGame > シンプルなホーム判定を返す 0ms
     → (0 , detectMyTeamPosition) is not a function
   × homeVisitorDetector > isHomeGame > シンプルなビジター判定を返す 0ms
     → (0 , detectMyTeamPosition) is not a function
 ✓ src/tests/parsers/homeDetector.test.ts (4 tests) 22ms
 ✓ src/tests/parsers/teamExtractor.test.ts (6 tests) 25ms
 ✓ src/tests/parsers/scoreExtractor.test.ts (7 tests) 29ms
stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ホームゲーム勝利（サヨナラ勝ち）を正しく解析
試合HTML解析を開始...
試合HTML解析完了: {
  opponent: [32m'千葉ロッテ'[39m,
  myScore: [33m6[39m,
  vsScore: [33m5[39m,
  location: [32m'エスコンフィールド'[39m,
  isHomeGame: [33mtrue[39m,
  result: [32m'win'[39m
}
  ホーム/ビジター: ホーム
  試合結果: win

 ❯ src/tests/parsers/venueExtractor.test.ts (7 tests | 2 failed) 46ms
   ✓ venueExtractor > extractGameVenue > 正常なHTMLから会場名を抽出 9ms
   ✓ venueExtractor > extractGameVenue > エスコンフィールドの場合 4ms
   ✓ venueExtractor > extractGameVenue > ビジター球場の場合 9ms
   × venueExtractor > extractGameVenue > 会場要素が見つからない場合はエラーを投げる 7ms
     → expected [Function] to throw error including 'game-vs__text要素が見つかりませんでした' but got '会場要素が見つかりません'
   ✓ venueExtractor > extractVenueLocationInfo > 札幌ドームはホーム球場として検出 4ms
   × venueExtractor > extractVenueLocationInfo > エスコンフィールドはホーム球場として検出 8ms
     → expected 'high' to be 'medium' // Object.is equality
   ✓ venueExtractor > extractVenueLocationInfo > 他の球場はビジター球場として検出 4ms
stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ホームゲーム敗戦を正しく解析
試合HTML解析を開始...
試合HTML解析完了: {
  opponent: [32m'千葉ロッテ'[39m,
  myScore: [33m4[39m,
  vsScore: [33m8[39m,
  location: [32m'エスコンフィールド'[39m,
  isHomeGame: [33mtrue[39m,
  result: [32m'lose'[39m
}
  ホーム/ビジター: ホーム
  試合結果: lose

stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム勝利を正しく解析
試合HTML解析を開始...
試合HTML解析完了: {
  opponent: [32m'オリックス'[39m,
  myScore: [33m7[39m,
  vsScore: [33m3[39m,
  location: [32m'京セラドーム大阪'[39m,
  isHomeGame: [33mfalse[39m,
  result: [32m'win'[39m
}
  ホーム/ビジター: ビジター
  試合結果: win

stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム引き分けを正しく解析
試合HTML解析を開始...
試合HTML解析完了: {
  opponent: [32m'千葉ロッテ'[39m,
  myScore: [33m2[39m,
  vsScore: [33m2[39m,
  location: [32m'ZOZOマリンスタジアム'[39m,
  isHomeGame: [33mfalse[39m,
  result: [32m'draw'[39m
}
  ホーム/ビジター: ビジター
  試合結果: draw

stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > edge cases and error handling > 不完全なHTMLでエラーを適切に投げる
試合HTML解析を開始...

stdout | src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > edge cases and error handling > チーム名が見つからない場合エラーを投げる
試合HTML解析を開始...

 ❯ src/tests/parsers/gameParser.integration.test.ts (6 tests | 3 failed) 117ms
   ✓ gameParser integration tests > parseGameHTML with real HTML patterns > ホームゲーム勝利（サヨナラ勝ち）を正しく解析 41ms
   × gameParser integration tests > parseGameHTML with real HTML patterns > ホームゲーム敗戦を正しく解析 28ms
     → expected '千葉ロッテ' to be '楽天イーグルス' // Object.is equality
   × gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム勝利を正しく解析 20ms
     → expected 7 to be 8 // Object.is equality
   × gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム引き分けを正しく解析 23ms
     → expected '千葉ロッテ' to be 'ソフトバンク' // Object.is equality
   ✓ gameParser integration tests > edge cases and error handling > 不完全なHTMLでエラーを適切に投げる 3ms
   ✓ gameParser integration tests > edge cases and error handling > チーム名が見つからない場合エラーを投げる 2ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 9 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ホームゲーム敗戦を正しく解析
AssertionError: expected '千葉ロッテ' to be '楽天イーグルス' // Object.is equality

Expected: [32m"楽天イーグルス"[39m
Received: [31m"千葉ロッテ"[39m

 ❯ src/tests/parsers/gameParser.integration.test.ts:30:31
     28|       const result = parseGameHTML(html);
     29| 
     30|       expect(result.opponent).toBe('楽天イーグルス');
       |                               ^
     31|       expect(result.myScore).toBe(2); // ファイターズ2点
     32|       expect(result.vsScore).toBe(7); // 相手7点

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/9]⎯

 FAIL  src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム勝利を正しく解析
AssertionError: expected 7 to be 8 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 8[39m
[31m+ 7[39m

 ❯ src/tests/parsers/gameParser.integration.test.ts:43:30
     41| 
     42|       expect(result.opponent).toBe('オリックス');
     43|       expect(result.myScore).toBe(8); // ファイターズ8点（ビジター）
       |                              ^
     44|       expect(result.vsScore).toBe(3); // 相手3点
     45|       expect(result.location).toBe('京セラドーム大阪');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/9]⎯

 FAIL  src/tests/parsers/gameParser.integration.test.ts > gameParser integration tests > parseGameHTML with real HTML patterns > ビジターゲーム引き分けを正しく解析
AssertionError: expected '千葉ロッテ' to be 'ソフトバンク' // Object.is equality

Expected: [32m"ソフトバンク"[39m
Received: [31m"千葉ロッテ"[39m

 ❯ src/tests/parsers/gameParser.integration.test.ts:54:31
     52|       const result = parseGameHTML(html);
     53| 
     54|       expect(result.opponent).toBe('ソフトバンク');
       |                               ^
     55|       expect(result.myScore).toBe(4); // ファイターズ4点（ビジター）
     56|       expect(result.vsScore).toBe(4); // 相手4点

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/9]⎯

 FAIL  src/tests/parsers/homeVisitorDetector.test.ts > homeVisitorDetector > detectHomeVisitor > ホーム球場でファイターズが0番目の場合
TypeError: (0 , detectMyTeamPosition) is not a function
 ❯ detectHomeVisitor src/lib/parsers/homeVisitorDetector.ts:13:20
     11|  */
     12| export function detectHomeVisitor(html: string): HomeVisitorResult {
     13|   const teamInfo = detectMyTeamPosition(html);
       |                    ^
     14| 
     15|   return {
 ❯ src/tests/parsers/homeVisitorDetector.test.ts:19:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/9]⎯

 FAIL  src/tests/parsers/homeVisitorDetector.test.ts > homeVisitorDetector > detectHomeVisitor > ビジター球場でファイターズが1番目の場合
TypeError: (0 , detectMyTeamPosition) is not a function
 ❯ detectHomeVisitor src/lib/parsers/homeVisitorDetector.ts:13:20
     11|  */
     12| export function detectHomeVisitor(html: string): HomeVisitorResult {
     13|   const teamInfo = detectMyTeamPosition(html);
       |                    ^
     14| 
     15|   return {
 ❯ src/tests/parsers/homeVisitorDetector.test.ts:38:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/9]⎯

 FAIL  src/tests/parsers/homeVisitorDetector.test.ts > homeVisitorDetector > isHomeGame > シンプルなホーム判定を返す
TypeError: (0 , detectMyTeamPosition) is not a function
 ❯ isHomeGame src/lib/parsers/homeVisitorDetector.ts:26:20
     24|  */
     25| export function isHomeGame(html: string): boolean {
     26|   const teamInfo = detectMyTeamPosition(html);
       |                    ^
     27|   return teamInfo.isHome;
     28| }
 ❯ src/tests/parsers/homeVisitorDetector.test.ts:57:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/9]⎯

 FAIL  src/tests/parsers/homeVisitorDetector.test.ts > homeVisitorDetector > isHomeGame > シンプルなビジター判定を返す
TypeError: (0 , detectMyTeamPosition) is not a function
 ❯ isHomeGame src/lib/parsers/homeVisitorDetector.ts:26:20
     24|  */
     25| export function isHomeGame(html: string): boolean {
     26|   const teamInfo = detectMyTeamPosition(html);
       |                    ^
     27|   return teamInfo.isHome;
     28| }
 ❯ src/tests/parsers/homeVisitorDetector.test.ts:72:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/9]⎯

 FAIL  src/tests/parsers/venueExtractor.test.ts > venueExtractor > extractGameVenue > 会場要素が見つからない場合はエラーを投げる
AssertionError: expected [Function] to throw error including 'game-vs__text要素が見つかりませんでした' but got '会場要素が見つかりません'

Expected: [32m"[7mgame-vs__text[27m要素が見つかりません[7mでした[27m"[39m
Received: [31m"[7m会場[27m要素が見つかりません"[39m

 ❯ src/tests/parsers/venueExtractor.test.ts:36:44
     34|       const html = '<div>No venue elements</div>';
     35| 
     36|       expect(() => extractGameVenue(html)).toThrow('game-vs__text要素が見つ…
       |                                            ^
     37|     });
     38|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/9]⎯

 FAIL  src/tests/parsers/venueExtractor.test.ts > venueExtractor > extractVenueLocationInfo > エスコンフィールドはホーム球場として検出
AssertionError: expected 'high' to be 'medium' // Object.is equality

Expected: [32m"medium"[39m
Received: [31m"high"[39m

 ❯ src/tests/parsers/venueExtractor.test.ts:60:38
     58|       expect(result.venue).toBe('エスコンフィールド');
     59|       expect(result.isHomeVenue).toBe(true);
     60|       expect(result.confidenceLevel).toBe('medium');
       |                                      ^
     61|     });
     62| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/9]⎯


 Test Files  3 failed | 3 passed (6)
      Tests  9 failed | 25 passed (34)
   Start at  16:55:25
   Duration  681ms (transform 249ms, setup 0ms, collect 352ms, tests 244ms, environment 1.94s, prepare 254ms)

